// Copyright 2017 The Khronos Group. 
//
//  Khronos licenses this file to you under the Creative Commons Attribution 4.0 
//  International (CC BY 4.0) License (the "License"); you may not use this file 
//  except in compliance with the License.  You may obtain a copy of the License 
//  at https://creativecommons.org/licenses/by/4.0/
//
//  Unless required by applicable law or agreed to in writing, material distributed 
//  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
//  CONDITIONS OF ANY KIND, either express or implied. If all or a portion of this 
//  material is re-used, notice substantially similar to the following must be included:
//
//  This specification includes material developed at The Khronos Group 
//  (http://www.khronos.org/). Khronos supplied such material on an "AS IS" BASIS, 
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, under 
//  the terms of the Creative Commons Attribution 4.0 International (CC BY 4.0) 
//  License (the "License"), available at https://creativecommons.org/licenses/by/4.0/. 
//  All use of such material is governed by the term of the License. Khronos bears 
//  no responsibility whatsoever for additions or modifications to its material.

[[compiler_options]]
== Compiler options

The compiler options are categorized as preprocessor options, options for controlling the OpenCL {cpp} version, options that control FP16 and FP64 support.
This specification defines a standard set of options that must be supported by the compiler when building program executables online or offline from OpenCL {cpp} to an IL.
These may be extended by a set of vendor or platform specific options.

[[preprocessor_options]]
=== Preprocessor options

These options control the OpenCL {cpp} preprocessor which is run on each program source before actual compilation.

----
-D name
----

Predefine name as a macro, with definition 1.

----
-D name=definition
----

The contents of definition are tokenized and processed as if they appeared during translation phase three in a +#define+ directive.
In particular, the definition will be truncated by embedded newline characters.

[[options-controlling_the-opencl_c_version]]
=== Options Controlling the OpenCL {cpp} version

The following option controls the version of OpenCL {cpp} that the compiler accepts.

----
-cl-std=
----

Determine the OpenCL {cpp} language version to use.
A value for this option must be provided.
Valid values are:

* c++ - Support all OpenCL {cpp} programs that use the OpenCL {cpp} language features defined in __<<openclcpp-programming-language,OpenCL {cpp} Programming Language>> section__.

[[fp16_and_fp64_options]]
=== Double and half-precision floating-point options

The following option controls the double and half floating-point support that the compiler accepts.

----
-cl-fp16-enable
----

This option enables full half data type support.
The option defines +cl_khr_fp16+ macro.
The default is disabled.

----
-cl-fp64-enable
----

This option enables double data type support.
The option defines +cl_khr_fp64+ macro.
The default is disabled.

[[other_options]]
=== Other options

----
-cl-zero-init-local-mem-vars
----

This option enables software zero-initialization of variables allocated in local memory.